{"ast":null,"code":"\"use client\";\n\n// src/use-checkbox-group.ts\nimport { useCallback, useMemo } from \"react\";\nimport { chain, mergeProps } from \"@react-aria/utils\";\nimport { checkboxGroup } from \"@nextui-org/theme\";\nimport { useCheckboxGroup as useReactAriaCheckboxGroup } from \"@react-aria/checkbox\";\nimport { useCheckboxGroupState } from \"@react-stately/checkbox\";\nimport { useDOMRef } from \"@nextui-org/react-utils\";\nimport { clsx, safeAriaLabel } from \"@nextui-org/shared-utils\";\nfunction useCheckboxGroup(props) {\n  const {\n    as,\n    ref,\n    classNames,\n    children,\n    label,\n    radius,\n    value,\n    name,\n    defaultValue,\n    size = \"md\",\n    color = \"primary\",\n    orientation = \"vertical\",\n    lineThrough = false,\n    isDisabled = false,\n    disableAnimation = false,\n    isReadOnly,\n    isRequired,\n    onValueChange,\n    description,\n    errorMessage,\n    className,\n    ...otherProps\n  } = props;\n  const Component = as || \"div\";\n  const domRef = useDOMRef(ref);\n  const checkboxGroupProps = useMemo(() => {\n    return {\n      ...otherProps,\n      value,\n      name,\n      \"aria-label\": safeAriaLabel(otherProps[\"aria-label\"], label),\n      defaultValue,\n      isRequired,\n      isReadOnly,\n      orientation,\n      validationBehavior: \"native\",\n      isInvalid: props.isInvalid || props.validationState === \"invalid\",\n      onChange: chain(props.onChange, onValueChange)\n    };\n  }, [value, name, label, defaultValue, isRequired, isReadOnly, orientation, onValueChange, props.isInvalid, props.validationState, otherProps[\"aria-label\"], otherProps]);\n  const groupState = useCheckboxGroupState(checkboxGroupProps);\n  const {\n    labelProps,\n    groupProps,\n    descriptionProps,\n    errorMessageProps,\n    isInvalid: isAriaInvalid,\n    validationErrors,\n    validationDetails\n  } = useReactAriaCheckboxGroup(checkboxGroupProps, groupState);\n  let isInvalid = props.isInvalid || props.validationState === \"invalid\" || isAriaInvalid;\n  const context = useMemo(() => ({\n    size,\n    color,\n    radius,\n    lineThrough,\n    isInvalid,\n    isDisabled,\n    disableAnimation,\n    groupState\n  }), [size, color, radius, lineThrough, isDisabled, disableAnimation, isInvalid, groupState == null ? void 0 : groupState.value, groupState == null ? void 0 : groupState.isDisabled, groupState == null ? void 0 : groupState.isReadOnly, groupState == null ? void 0 : groupState.isInvalid, groupState == null ? void 0 : groupState.isSelected]);\n  const slots = useMemo(() => checkboxGroup({\n    isRequired,\n    isInvalid,\n    disableAnimation\n  }), [isRequired, isInvalid, disableAnimation]);\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const getGroupProps = useCallback(() => {\n    return {\n      ref: domRef,\n      className: slots.base({\n        class: baseStyles\n      }),\n      ...mergeProps(groupProps, otherProps)\n    };\n  }, [slots, domRef, baseStyles, groupProps, otherProps]);\n  const getLabelProps = useCallback(() => {\n    return {\n      className: slots.label({\n        class: classNames == null ? void 0 : classNames.label\n      }),\n      ...labelProps\n    };\n  }, [slots, labelProps, classNames == null ? void 0 : classNames.label]);\n  const getWrapperProps = useCallback(() => {\n    return {\n      className: slots.wrapper({\n        class: classNames == null ? void 0 : classNames.wrapper\n      }),\n      role: \"presentation\",\n      \"data-orientation\": orientation\n    };\n  }, [slots, orientation, classNames == null ? void 0 : classNames.wrapper]);\n  const getDescriptionProps = useCallback((props2 = {}) => {\n    return {\n      ...props2,\n      ...descriptionProps,\n      className: slots.description({\n        class: clsx(classNames == null ? void 0 : classNames.description, props2 == null ? void 0 : props2.className)\n      })\n    };\n  }, [slots, descriptionProps, classNames == null ? void 0 : classNames.description]);\n  const getErrorMessageProps = useCallback((props2 = {}) => {\n    return {\n      ...props2,\n      ...errorMessageProps,\n      className: slots.errorMessage({\n        class: clsx(classNames == null ? void 0 : classNames.errorMessage, props2 == null ? void 0 : props2.className)\n      })\n    };\n  }, [slots, errorMessageProps, classNames == null ? void 0 : classNames.errorMessage]);\n  return {\n    Component,\n    children,\n    label,\n    context,\n    description,\n    isInvalid,\n    errorMessage: typeof errorMessage === \"function\" ? errorMessage({\n      isInvalid,\n      validationErrors,\n      validationDetails\n    }) : errorMessage || (validationErrors == null ? void 0 : validationErrors.join(\" \")),\n    getGroupProps,\n    getLabelProps,\n    getWrapperProps,\n    getDescriptionProps,\n    getErrorMessageProps\n  };\n}\nexport { useCheckboxGroup };","map":{"version":3,"names":["useCallback","useMemo","chain","mergeProps","checkboxGroup","useCheckboxGroup","useReactAriaCheckboxGroup","useCheckboxGroupState","useDOMRef","clsx","safeAriaLabel","props","as","ref","classNames","children","label","radius","value","name","defaultValue","size","color","orientation","lineThrough","isDisabled","disableAnimation","isReadOnly","isRequired","onValueChange","description","errorMessage","className","otherProps","Component","domRef","checkboxGroupProps","validationBehavior","isInvalid","validationState","onChange","groupState","labelProps","groupProps","descriptionProps","errorMessageProps","isAriaInvalid","validationErrors","validationDetails","context","isSelected","slots","baseStyles","base","getGroupProps","class","getLabelProps","getWrapperProps","wrapper","role","getDescriptionProps","props2","getErrorMessageProps","join"],"sources":["C:/Users/Huzaif Momin/Desktop/minor/webdev/node_modules/@nextui-org/checkbox/dist/chunk-EIIVVZ2T.mjs"],"sourcesContent":["\"use client\";\n\n// src/use-checkbox-group.ts\nimport { useCallback, useMemo } from \"react\";\nimport { chain, mergeProps } from \"@react-aria/utils\";\nimport { checkboxGroup } from \"@nextui-org/theme\";\nimport { useCheckboxGroup as useReactAriaCheckboxGroup } from \"@react-aria/checkbox\";\nimport { useCheckboxGroupState } from \"@react-stately/checkbox\";\nimport { useDOMRef } from \"@nextui-org/react-utils\";\nimport { clsx, safeAriaLabel } from \"@nextui-org/shared-utils\";\nfunction useCheckboxGroup(props) {\n  const {\n    as,\n    ref,\n    classNames,\n    children,\n    label,\n    radius,\n    value,\n    name,\n    defaultValue,\n    size = \"md\",\n    color = \"primary\",\n    orientation = \"vertical\",\n    lineThrough = false,\n    isDisabled = false,\n    disableAnimation = false,\n    isReadOnly,\n    isRequired,\n    onValueChange,\n    description,\n    errorMessage,\n    className,\n    ...otherProps\n  } = props;\n  const Component = as || \"div\";\n  const domRef = useDOMRef(ref);\n  const checkboxGroupProps = useMemo(() => {\n    return {\n      ...otherProps,\n      value,\n      name,\n      \"aria-label\": safeAriaLabel(otherProps[\"aria-label\"], label),\n      defaultValue,\n      isRequired,\n      isReadOnly,\n      orientation,\n      validationBehavior: \"native\",\n      isInvalid: props.isInvalid || props.validationState === \"invalid\",\n      onChange: chain(props.onChange, onValueChange)\n    };\n  }, [\n    value,\n    name,\n    label,\n    defaultValue,\n    isRequired,\n    isReadOnly,\n    orientation,\n    onValueChange,\n    props.isInvalid,\n    props.validationState,\n    otherProps[\"aria-label\"],\n    otherProps\n  ]);\n  const groupState = useCheckboxGroupState(checkboxGroupProps);\n  const {\n    labelProps,\n    groupProps,\n    descriptionProps,\n    errorMessageProps,\n    isInvalid: isAriaInvalid,\n    validationErrors,\n    validationDetails\n  } = useReactAriaCheckboxGroup(checkboxGroupProps, groupState);\n  let isInvalid = props.isInvalid || props.validationState === \"invalid\" || isAriaInvalid;\n  const context = useMemo(\n    () => ({\n      size,\n      color,\n      radius,\n      lineThrough,\n      isInvalid,\n      isDisabled,\n      disableAnimation,\n      groupState\n    }),\n    [\n      size,\n      color,\n      radius,\n      lineThrough,\n      isDisabled,\n      disableAnimation,\n      isInvalid,\n      groupState == null ? void 0 : groupState.value,\n      groupState == null ? void 0 : groupState.isDisabled,\n      groupState == null ? void 0 : groupState.isReadOnly,\n      groupState == null ? void 0 : groupState.isInvalid,\n      groupState == null ? void 0 : groupState.isSelected\n    ]\n  );\n  const slots = useMemo(\n    () => checkboxGroup({ isRequired, isInvalid, disableAnimation }),\n    [isRequired, isInvalid, disableAnimation]\n  );\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const getGroupProps = useCallback(() => {\n    return {\n      ref: domRef,\n      className: slots.base({ class: baseStyles }),\n      ...mergeProps(groupProps, otherProps)\n    };\n  }, [slots, domRef, baseStyles, groupProps, otherProps]);\n  const getLabelProps = useCallback(() => {\n    return {\n      className: slots.label({ class: classNames == null ? void 0 : classNames.label }),\n      ...labelProps\n    };\n  }, [slots, labelProps, classNames == null ? void 0 : classNames.label]);\n  const getWrapperProps = useCallback(() => {\n    return {\n      className: slots.wrapper({ class: classNames == null ? void 0 : classNames.wrapper }),\n      role: \"presentation\",\n      \"data-orientation\": orientation\n    };\n  }, [slots, orientation, classNames == null ? void 0 : classNames.wrapper]);\n  const getDescriptionProps = useCallback(\n    (props2 = {}) => {\n      return {\n        ...props2,\n        ...descriptionProps,\n        className: slots.description({ class: clsx(classNames == null ? void 0 : classNames.description, props2 == null ? void 0 : props2.className) })\n      };\n    },\n    [slots, descriptionProps, classNames == null ? void 0 : classNames.description]\n  );\n  const getErrorMessageProps = useCallback(\n    (props2 = {}) => {\n      return {\n        ...props2,\n        ...errorMessageProps,\n        className: slots.errorMessage({ class: clsx(classNames == null ? void 0 : classNames.errorMessage, props2 == null ? void 0 : props2.className) })\n      };\n    },\n    [slots, errorMessageProps, classNames == null ? void 0 : classNames.errorMessage]\n  );\n  return {\n    Component,\n    children,\n    label,\n    context,\n    description,\n    isInvalid,\n    errorMessage: typeof errorMessage === \"function\" ? errorMessage({ isInvalid, validationErrors, validationDetails }) : errorMessage || (validationErrors == null ? void 0 : validationErrors.join(\" \")),\n    getGroupProps,\n    getLabelProps,\n    getWrapperProps,\n    getDescriptionProps,\n    getErrorMessageProps\n  };\n}\n\nexport {\n  useCheckboxGroup\n};\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA,SAASA,WAAW,EAAEC,OAAO,QAAQ,OAAO;AAC5C,SAASC,KAAK,EAAEC,UAAU,QAAQ,mBAAmB;AACrD,SAASC,aAAa,QAAQ,mBAAmB;AACjD,SAASC,gBAAgB,IAAIC,yBAAyB,QAAQ,sBAAsB;AACpF,SAASC,qBAAqB,QAAQ,yBAAyB;AAC/D,SAASC,SAAS,QAAQ,yBAAyB;AACnD,SAASC,IAAI,EAAEC,aAAa,QAAQ,0BAA0B;AAC9D,SAASL,gBAAgBA,CAACM,KAAK,EAAE;EAC/B,MAAM;IACJC,EAAE;IACFC,GAAG;IACHC,UAAU;IACVC,QAAQ;IACRC,KAAK;IACLC,MAAM;IACNC,KAAK;IACLC,IAAI;IACJC,YAAY;IACZC,IAAI,GAAG,IAAI;IACXC,KAAK,GAAG,SAAS;IACjBC,WAAW,GAAG,UAAU;IACxBC,WAAW,GAAG,KAAK;IACnBC,UAAU,GAAG,KAAK;IAClBC,gBAAgB,GAAG,KAAK;IACxBC,UAAU;IACVC,UAAU;IACVC,aAAa;IACbC,WAAW;IACXC,YAAY;IACZC,SAAS;IACT,GAAGC;EACL,CAAC,GAAGtB,KAAK;EACT,MAAMuB,SAAS,GAAGtB,EAAE,IAAI,KAAK;EAC7B,MAAMuB,MAAM,GAAG3B,SAAS,CAACK,GAAG,CAAC;EAC7B,MAAMuB,kBAAkB,GAAGnC,OAAO,CAAC,MAAM;IACvC,OAAO;MACL,GAAGgC,UAAU;MACbf,KAAK;MACLC,IAAI;MACJ,YAAY,EAAET,aAAa,CAACuB,UAAU,CAAC,YAAY,CAAC,EAAEjB,KAAK,CAAC;MAC5DI,YAAY;MACZQ,UAAU;MACVD,UAAU;MACVJ,WAAW;MACXc,kBAAkB,EAAE,QAAQ;MAC5BC,SAAS,EAAE3B,KAAK,CAAC2B,SAAS,IAAI3B,KAAK,CAAC4B,eAAe,KAAK,SAAS;MACjEC,QAAQ,EAAEtC,KAAK,CAACS,KAAK,CAAC6B,QAAQ,EAAEX,aAAa;IAC/C,CAAC;EACH,CAAC,EAAE,CACDX,KAAK,EACLC,IAAI,EACJH,KAAK,EACLI,YAAY,EACZQ,UAAU,EACVD,UAAU,EACVJ,WAAW,EACXM,aAAa,EACblB,KAAK,CAAC2B,SAAS,EACf3B,KAAK,CAAC4B,eAAe,EACrBN,UAAU,CAAC,YAAY,CAAC,EACxBA,UAAU,CACX,CAAC;EACF,MAAMQ,UAAU,GAAGlC,qBAAqB,CAAC6B,kBAAkB,CAAC;EAC5D,MAAM;IACJM,UAAU;IACVC,UAAU;IACVC,gBAAgB;IAChBC,iBAAiB;IACjBP,SAAS,EAAEQ,aAAa;IACxBC,gBAAgB;IAChBC;EACF,CAAC,GAAG1C,yBAAyB,CAAC8B,kBAAkB,EAAEK,UAAU,CAAC;EAC7D,IAAIH,SAAS,GAAG3B,KAAK,CAAC2B,SAAS,IAAI3B,KAAK,CAAC4B,eAAe,KAAK,SAAS,IAAIO,aAAa;EACvF,MAAMG,OAAO,GAAGhD,OAAO,CACrB,OAAO;IACLoB,IAAI;IACJC,KAAK;IACLL,MAAM;IACNO,WAAW;IACXc,SAAS;IACTb,UAAU;IACVC,gBAAgB;IAChBe;EACF,CAAC,CAAC,EACF,CACEpB,IAAI,EACJC,KAAK,EACLL,MAAM,EACNO,WAAW,EACXC,UAAU,EACVC,gBAAgB,EAChBY,SAAS,EACTG,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACvB,KAAK,EAC9CuB,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAAChB,UAAU,EACnDgB,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACd,UAAU,EACnDc,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACH,SAAS,EAClDG,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACS,UAAU,CAEvD,CAAC;EACD,MAAMC,KAAK,GAAGlD,OAAO,CACnB,MAAMG,aAAa,CAAC;IAAEwB,UAAU;IAAEU,SAAS;IAAEZ;EAAiB,CAAC,CAAC,EAChE,CAACE,UAAU,EAAEU,SAAS,EAAEZ,gBAAgB,CAC1C,CAAC;EACD,MAAM0B,UAAU,GAAG3C,IAAI,CAACK,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACuC,IAAI,EAAErB,SAAS,CAAC;EACjF,MAAMsB,aAAa,GAAGtD,WAAW,CAAC,MAAM;IACtC,OAAO;MACLa,GAAG,EAAEsB,MAAM;MACXH,SAAS,EAAEmB,KAAK,CAACE,IAAI,CAAC;QAAEE,KAAK,EAAEH;MAAW,CAAC,CAAC;MAC5C,GAAGjD,UAAU,CAACwC,UAAU,EAAEV,UAAU;IACtC,CAAC;EACH,CAAC,EAAE,CAACkB,KAAK,EAAEhB,MAAM,EAAEiB,UAAU,EAAET,UAAU,EAAEV,UAAU,CAAC,CAAC;EACvD,MAAMuB,aAAa,GAAGxD,WAAW,CAAC,MAAM;IACtC,OAAO;MACLgC,SAAS,EAAEmB,KAAK,CAACnC,KAAK,CAAC;QAAEuC,KAAK,EAAEzC,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACE;MAAM,CAAC,CAAC;MACjF,GAAG0B;IACL,CAAC;EACH,CAAC,EAAE,CAACS,KAAK,EAAET,UAAU,EAAE5B,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACE,KAAK,CAAC,CAAC;EACvE,MAAMyC,eAAe,GAAGzD,WAAW,CAAC,MAAM;IACxC,OAAO;MACLgC,SAAS,EAAEmB,KAAK,CAACO,OAAO,CAAC;QAAEH,KAAK,EAAEzC,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAAC4C;MAAQ,CAAC,CAAC;MACrFC,IAAI,EAAE,cAAc;MACpB,kBAAkB,EAAEpC;IACtB,CAAC;EACH,CAAC,EAAE,CAAC4B,KAAK,EAAE5B,WAAW,EAAET,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAAC4C,OAAO,CAAC,CAAC;EAC1E,MAAME,mBAAmB,GAAG5D,WAAW,CACrC,CAAC6D,MAAM,GAAG,CAAC,CAAC,KAAK;IACf,OAAO;MACL,GAAGA,MAAM;MACT,GAAGjB,gBAAgB;MACnBZ,SAAS,EAAEmB,KAAK,CAACrB,WAAW,CAAC;QAAEyB,KAAK,EAAE9C,IAAI,CAACK,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACgB,WAAW,EAAE+B,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,MAAM,CAAC7B,SAAS;MAAE,CAAC;IAChJ,CAAC;EACH,CAAC,EACD,CAACmB,KAAK,EAAEP,gBAAgB,EAAE9B,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACgB,WAAW,CAChF,CAAC;EACD,MAAMgC,oBAAoB,GAAG9D,WAAW,CACtC,CAAC6D,MAAM,GAAG,CAAC,CAAC,KAAK;IACf,OAAO;MACL,GAAGA,MAAM;MACT,GAAGhB,iBAAiB;MACpBb,SAAS,EAAEmB,KAAK,CAACpB,YAAY,CAAC;QAAEwB,KAAK,EAAE9C,IAAI,CAACK,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACiB,YAAY,EAAE8B,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,MAAM,CAAC7B,SAAS;MAAE,CAAC;IAClJ,CAAC;EACH,CAAC,EACD,CAACmB,KAAK,EAAEN,iBAAiB,EAAE/B,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACiB,YAAY,CAClF,CAAC;EACD,OAAO;IACLG,SAAS;IACTnB,QAAQ;IACRC,KAAK;IACLiC,OAAO;IACPnB,WAAW;IACXQ,SAAS;IACTP,YAAY,EAAE,OAAOA,YAAY,KAAK,UAAU,GAAGA,YAAY,CAAC;MAAEO,SAAS;MAAES,gBAAgB;MAAEC;IAAkB,CAAC,CAAC,GAAGjB,YAAY,KAAKgB,gBAAgB,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,gBAAgB,CAACgB,IAAI,CAAC,GAAG,CAAC,CAAC;IACtMT,aAAa;IACbE,aAAa;IACbC,eAAe;IACfG,mBAAmB;IACnBE;EACF,CAAC;AACH;AAEA,SACEzD,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}